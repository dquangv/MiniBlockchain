syntax = "proto3";

package pb;

option go_package = "pkg/p2p/pb";

message Transaction {
  bytes sender = 1;
  bytes receiver = 2;
  double amount = 3;
  int64 timestamp = 4;
  bytes signature = 5;
}

message TxResponse {
  string status = 1;
  string message = 2;
}

message Empty {}

message Block {
  repeated Transaction transactions = 1;
  string merkleRoot = 2;
  string prevBlockHash = 3;
  string currentBlockHash = 4;
  int64 height = 5;
}

message VoteRequest {
  Block block = 1;
}

message VoteResponse {
  string nodeId = 1;
  bool approved = 2;
}

message BlockRequest {
  string hash = 1;
}

message BlockResponse {
  Block block = 1;
}

service NodeService {
  rpc SendTransaction(Transaction) returns (TxResponse);
  rpc Ping(Empty) returns (TxResponse);
  rpc ProposeBlock(VoteRequest) returns (VoteResponse);
  rpc CommitBlock(Block) returns (TxResponse);
  rpc GetLatestBlock(Empty) returns (BlockResponse);
  rpc GetBlock(BlockRequest) returns (BlockResponse);
  rpc GetBlockByHeight(HeightRequest) returns (BlockResponse);
  rpc GetBalance (BalanceRequest) returns (BalanceResponse);
  rpc ExchangePriority (PriorityRequest) returns (PriorityResponse);
}

message HeightRequest {
  int64 height = 1;
}


message BalanceRequest {
  string name = 1;
}

message BalanceResponse {
  string balance = 1;
}

message PriorityRequest {
  string nodeId = 1;
  int32 priority = 2;
}

message PriorityResponse {
  string leaderId = 1;
  bool acknowledged = 2;
}